function [sma, params] = getWaterCalibrationStateMatrix(outputs, ndrops, delay)
global S

params = [];

sma = NewStateMatrix(); % Assemble state matrix
sma = AddState(sma, 'Name', 'TrigTrialStart', 'Timer', 50,...
    'StateChangeConditions', {'Port1In', 'Drop1_OpenvalveL', 'Port2In', 'Drop1_OpenvalveR','Tup', 'TrialEnd'},...
    'OutputActions', {});
for i_drop = 1:ndrops-1   % left valve
    sma = AddState(sma, 'Name', ['Drop',num2str(i_drop),'_OpenvalveL'], 'Timer', S.GUI.WaterValveTime,...
        'StateChangeConditions', {'Tup', ['Drop',num2str(i_drop),'_ClosevalveL']},...
        'OutputActions', outputs.LeftWaterOutput);
    sma = AddState(sma, 'Name', ['Drop',num2str(i_drop),'_ClosevalveL'], 'Timer', delay,...
        'StateChangeConditions', {'Tup', ['Drop',num2str(i_drop+1),'_OpenvalveL']},...
        'OutputActions', {});
end
sma = AddState(sma, 'Name', ['Drop',num2str(ndrops),'_OpenvalveL'], 'Timer', S.GUI.WaterValveTime,...
    'StateChangeConditions', {'Tup', 'TrialEnd'},...
    'OutputActions', outputs.LeftWaterOutput);
for i_drop = 1:ndrops-1   % right valve
    sma = AddState(sma, 'Name', ['Drop',num2str(i_drop),'_OpenvalveR'], 'Timer', S.GUI.WaterValveTime,...
        'StateChangeConditions', {'Tup', ['Drop',num2str(i_drop),'_ClosevalveR']},...
        'OutputActions', outputs.RightWaterOutput);
    sma = AddState(sma, 'Name', ['Drop',num2str(i_drop),'_ClosevalveR'], 'Timer', delay,...
        'StateChangeConditions', {'Tup', ['Drop',num2str(i_drop+1),'_OpenvalveR']},...
        'OutputActions', {});
end
sma = AddState(sma, 'Name', ['Drop',num2str(ndrops),'_OpenvalveR'], 'Timer', S.GUI.WaterValveTime,...
    'StateChangeConditions', {'Tup', 'TrialEnd'},...
    'OutputActions', outputs.RightWaterOutput);
sma = AddState(sma, 'Name', 'TrialEnd', 'Timer', 0.05,...
    'StateChangeConditions', {'Tup', 'exit'},...
    'OutputActions', {});